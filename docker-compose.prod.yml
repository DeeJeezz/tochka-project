version: '3.3'

services:
    rmq:
        build: ./rmq
        env_file: 
            - .env.prod
        volumes:
            - log_data:/var/log/rmq/
        restart: on-failure:3
            
    postgres_db:
        image: postgres:alpine
        environment: 
            - POSTGRES_DB=${SQL_DB_NAME}
            - POSTGRES_USER=${SQL_DB_USER}
            - POSTGRES_PASSWORD=${SQL_DB_PASSWORD}
        volumes:
            - postgres_data:/var/lib/postgresql/data/
            - log_data:/var/log/postgresql
        restart: on-failure:3

    api:
        build:
            context: ./api
            dockerfile: Dockerfile.prod
        command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
        environment: 
            - DJANGO_SETTINGS_MODULE=config.settings_prod
        env_file:
            - .env.prod
        depends_on: 
            - rmq
            - postgres_db
        volumes: 
            - log_data:/var/log/api
            - static_volume:/opt/api/staticfiles
        restart: on-failure:3

    nginx:
        build: ./nginx
        ports:
            - 80:80
        volumes:
            - static_volume:/opt/api/staticfiles
        depends_on:
            - api
        restart: on-failure:3

    celery:
        build:
            context: ./api
            dockerfile: Dockerfile.prod
        command: celery -A config worker -l warning -f /var/log/celery/celery.log
        environment: 
            - DJANGO_SETTINGS_MODULE=config.settings_prod
        env_file: 
            - .env.prod
        restart: on-failure:3
        depends_on: 
            - api
            - rmq
        volumes: 
            - log_data:/var/log/celery

volumes: 
    postgres_data:
    log_data:
    static_volume: